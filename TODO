Web interface
    Needs tabbed interface
    *need to cut down on the max info that we send, can't handle sending megs worth of data in AJAX request in timely fashion
    don't break the old interface until the new one works, moron
    need a tab for the console
    need to be able to flip a file's status, which should change status for all of it's pieces as well.  
    Continuous update is broken.
    New pager works, how could it be made better?

File Grouping - for rar files and associated .par2 files, should only show one line in the file list.
Par2 support - auto fix files, remove droppings
fix download jobs:
    - Should have one job that manages the postset/file (depending on what was queued), show percent / time remaining / size
Support NZB -
    auto-retrieve .nzb files
    one postset per NZB
    save postset file piece index values as NZB files - gets them out of database and removes slow queries from the design
    -- this kinda works now.  by that, I mean we store our data files as NZB-ish files, shouldn't be too hard to add 
    -- 'actual' NZB support, but it's not integrated into the UI's so that you can download on a .NZB and have it
    -- retrieve from there.  Just as well, our matching kills anyways ;)

Support BZIP2:
    Bziping the files will save a LOT of disk space.  Every 5 gigs counts you know!

Seg Faults
    Web Server - cancelling a request kills blb.  oops, bad webserver.

Console
    With the reduced log spam this isn't as much of an issue, but old console messages are never removed.
    Support web console access.  Even if it's just a log of the last x items

SuperSplitter:
    Works by looking for like filenames
    Uses base par2 file to find additional groups
    Keeps unmatched headers, for future matching / processing (once a .par2 file is processed?)
    downloads base .par2's and .nzb

*Job-ify postset info loading.  Speed it up too, it takes forever and makes being subscribed to big groups painful.  Which is the whole point.
 -- storing info in XML files instead of the sqlite db seems to have cleared this up

-- OLD STUFF BELOW

*To determine decoder type, look at message contents.  Not all yEnc files have it in the subject :/
The new DB save stuff broke old postset expirations.  Should delete old on quit.
need to be able to redownload stuff you've downloaded before.

Known crashes:
active job screen is not a safe place to hang out. (ncurses)
when you add too many high priority jobs, one seems to flip out and complain about no connection for net job.  This 
  eventually leads to the process being killed for exhausting memory (I think that's the console, but net jobs shouldn't 
  be getting that error - they really do need a net connection, and if it was working correctly they would never be without one)

Web Tweaks:
Remove update buttons except for newsgroup.  Since we store the ids, we dont need to redownload them from the server
image viewing - use iframe to load in images / nfo files
make the Back button work

Needs to handle par2's inline. <- important

*Persistance:
* PostFile is having trouble saving / retrieveing file_pieces and the correct status.  Should work like this:
* pf->db_index is set when the postfile is inserted into the db.  It is restored by the restore function.
* pf->has_db_pieces is set when postfile pieces are restored from the db.  If there are no pieces in the db, will still get set.
* saving - 
* if pf->db_index is not set then save the postfile in the database
* if pf->has_db_pieces is set, then save the pieces.  Delete the old ones and save what is active in memory.

Add Job stuff to db. clean out old file based stuff.
* make a object for FilePiece, store msg_id and status info

object persistance:
* at end of headerretriever save all postset id's.  Should only need to save postfiles that have db info loaded - no others have changed
* this requires a delete and a insert.  Update will be way too slow. (SQL level, not FS level) <- wrong, update was OMG faster
* fileretriever job will need to load id's if they are not already loaded
unloaded postsets must be shown as status "unknown"
when on postsetdetail screen, should load all file pieces for the files shown - will this go fast if I use a join?

What to Do Next:
make PostsetJob queue jobs for all of it's non par files
have it trigger when done

remove entire ncurses interface <- ixnay.  Ncurses is sexy.
* make javascript make tables, not lists 
* allow web interface to grab headers / queue downloads

* use SQLite for data store. <- huge change
*    one db file per newsgroup
*    store all message ID's
*    store postsets
*    store files

Much excitement over new web interface.

tag removal in subjects (too much of a mess still) strip () [] and scan postsets within groups
    for tags.  Store known tags for a group on the newsgroup, and modify the sanitize function to remove them
    when looking up postsets.

Web enhancements:
    Ability to queue
*    Abillity to download
    Hover-view: when mouseover a postset line, grab info from server and display in mini-div

known crashes:
    * resize window can die if it happens to hit inside select() -> seems to be fixed, wouldn't know how
    crashes on certain postset stats when displayed on postsetlist screen - usually when loading
    crashes on certain postsets when displayed on postsetlist screen
    net jobs crash when they get cleared sometimes
    needs to handle net errors due to i.e. message ID not being available - has bad response code

Web API: (obsolete, we have real cgi params now)
    /joblist
    /newsgroups
    /postsets/news.group.name
    /postfiles/news.group.name,post_set_index

Needs to do:
    * investigate not resizing.  Is it only under gdb? <- yes, it is.  As far as I can tell.
    store a list of previous downloads, browsable and be able to go to the postset detail by hitting enter on the list
    percentages for header retrieval jobs
    * store list of active jobs in file
    * be able to retrieve headers as first thing if postset job doesn't have all the message id's
    keep up to date with headers in subscribed newsgroups, expire old ones and the postsets that had them
        - kinda works, but doesn't happen automatically
        after a postsetjob is done, add a new newsgroupping job
    * make indicators work
    *   k/sec
        gigs downloaded
    * load previous jobs at startup
    Save memory by stripping information for postsets we're not particularly interested into postset name, and min/max message_id for easy recreation with a targetted xover
    have small log window, with scrollback
    shorten info on post set detail - dont need XX/XX seen pieces
    be able to view .nfo files
    additional status line on post set list screen, showing tags 
        [nfo] = has .nfo file 
        [sfv] = has .sfv file
        [par2] = has .par2 file(s)
        [broken] = has corrupt pieces
        [fixable] = has corrupt pieces, and par2's.  will try to grab par files as well
    silence logs, info should be user-useful.
    handle more msg ids coming in for a postset we have marked for retrieval -- doesn't this work automagically?  I think it does
    * be able to mark individual files from a postset for retrieval
    be able to retrieve multiple files from a postset simultainiously
    implement new template base class for jobs that have sub-jobs
    allow multi line status
*   skip PAR2's
    <Cancelled> save file info for postsets, not just postset
    fix displays
        * postset detail doesn't update display of files as they come in
        * postset detail doesn't show actual status of downloading files

Decoders:
    Implement UUDecoder
*   Implement yEnc Decoder
    Implement MIME Decoder
    Optimize Decoders

*Pattern matching:
*    --
*    I want to be able to do this:
*
*    StringSplitter *splitter = new Stringsplitter();
*    splitter << "(" << FILE_NUM << ")" << OTHER_TEXT;
*
*    and have it be able to handle the parsing from there.

*   fix yEnc decoder to be able to download further pieces if one piece missing - fseek problem not going past EOF

Interface:
*   need to be able to use arrow keys to flip between PostSets
*   need to be able to mark PostSet for retrieval
*   show pieces of the file queue instead of the big log
*   only allow typing when you're on the log window
*   typing is sending commands to system, not directly interupting TCP streams
*   tab to switch panes
*   progress bar for postset downloads (brian)
*   multiple newsgroups
*   allow views of like panes - 
*       newsgroups
*       postsets
*   allow search - 
*       newsgroups
*       postsets
*   browse all newsgroups
    
General:
    Add ability to check cross-posted groups for missing pieces
*   Add resize support (ncurses)
*   Add net jobs
*   Add decoder jobs
    Persistence:
*       newsgroups
*       postsets
*       jobs
